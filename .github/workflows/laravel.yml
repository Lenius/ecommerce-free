name: Laravel

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 0 * * *'

jobs:
  laravel-tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        php: ['8.1']
        laravel: ['9.*']
        dependency-version: [prefer-stable]

    name: P${{ matrix.php }} - L${{ matrix.laravel }} - ${{ matrix.dependency-version }}

    steps:
      - name: Update apt
        run: sudo apt-get update --fix-missing

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, exif, apcu

      - name: Check PHP Version
        run: php -v

      - name: Setup Postgresql + postgis
        uses: huaxk/postgis-action@v1
        with:
          postgresql version: 'latest'  # See https://https://hub.docker.com/r/mdillon/postgis for available versions, if it is not specified, use the default value 'latest'
          postgresql password: 'test'   # This environment variable sets the superuser password for PostgreSQL, maybe string or secrets, the default superuser is defined by the input environment variable: postgresql user.
          postgresql user: 'test'  # This optional environment variable is used in conjunction with postgresql password to set a user and its password. This variable will create the specified user with superuser power and a database with the same name. If it is not specified, then the default user of 'postgres' will be used.
          postgresql db: 'test'  # This optional environment variable can be used to define a different name for the default database that is created when the image is first started. If it is not specified, then the value of postgresql user will be used.

      - name: Copy .env
        working-directory: project
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"

      - name: Cache Composer dependencies
        uses: actions/cache@v2
        with:
          path: /tmp/composer-cache
          key: ${{ runner.os }}-${{ hashFiles('**/composer.lock') }}

      - name: Install Composer dependencies
        working-directory: project
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist --ignore-platform-reqs

      - name: Install NPM dependencies
        working-directory: project
        run: npm ci

      - name: Compile assets for production
        working-directory: project
        run: npm run prod

      - name: Generate key
        working-directory: project
        run: php artisan --env=github key:generate

      - name: Directory Permissions
        working-directory: project
        run: chmod -R 777 storage bootstrap/cache

      - name: Migrate Database
        working-directory: project
        run: php artisan --env=github migrate:refresh --seed

#      - name: Execute tests (Unit and Feature tests) via PHPUnit
#        working-directory: project
#        run: php artisan test --env=github
  heroku-deploy:
    needs: laravel-tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: akhileshns/heroku-deploy@v3.12.12 # This is the action
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: "ecommerce-free" #Must be unique in Heroku
          heroku_email: "carsten@lenius.dk"
          appdir: "project"